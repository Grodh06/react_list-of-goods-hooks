{"version":3,"sources":["App.tsx","GoodsLIst.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","className","map","good","goodsFromServer","App","useState","itsBegin","setBegin","isReversed","setReversed","NONE","sortBy","setSortBy","selectedLength","setLength","visibleGoods","filter","length","ALPHABET","sort","curGood","nextGood","localeCompare","LENGTH","reverse","type","onClick","value","onChange","target","Number","Array","from","keys","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,kDCXQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,gBADZ,SAIGE,GAFIA,SDRTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,eAAAA,E,gBAAAA,E,aAAAA,M,KAME,IAAMO,EAAgB,WAC3B,IAAML,EAAc,UAAOI,GAC3B,EAA6BE,oBAAS,GAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAiBR,EAAOa,MAApD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCP,mBAAS,GAA7C,mBAAOQ,EAAP,KAAuBC,EAAvB,KAEMC,EAAehB,EAAMiB,QAAO,SAAAd,GAAI,OAAIA,EAAKe,QAAUJ,KAYzD,OAAQF,GACN,KAAKd,EAAOqB,SACVH,EAAaI,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQE,cAAcD,MAC/D,MAEF,KAAKxB,EAAO0B,OACVR,EACGI,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQH,OAASI,EAASJ,UAW7D,OAJIT,GACFO,EAAaS,UAIb,qBAAKxB,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACGM,EAEG,wBACEN,UAAU,+BACVyB,KAAK,SACLC,QAAS,kBAAMnB,GAAS,IAH1B,mBASA,sBAAKP,UAAU,qBAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,uCACA,wBACEA,UAAU,oBACVyB,KAAK,SACLC,QAAS,kBA/CvBZ,EAAU,GACVL,GAAY,QACZG,EAAUf,EAAOa,OA0CL,sBAQF,qBAAKV,UAAU,GAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAWD,MAAOgB,QAGtB,sBAAKf,UAAU,kCAAf,UACE,wBACEA,UAAU,oBACVyB,KAAK,SACLC,QAAS,kBAAMjB,GAAaD,IAH9B,qBAOA,wBACER,UAAU,oBACVyB,KAAK,SACLC,QAAS,kBAAMd,EAAUf,EAAOqB,WAHlC,yBAOA,wBACElB,UAAU,oBACVyB,KAAK,SACLC,QAAS,kBAAMd,EAAUf,EAAO0B,SAHlC,4BAOA,qBAAKvB,UAAU,oBAAf,SACE,wBACE2B,MAAOd,EACPe,SAAU,YAAiB,IA7EvBD,EA6ESE,EAAa,EAAbA,OA7ETF,EA8EWG,OAAOD,EAAOF,OA7E7Cb,EAAUa,IA0EI,SAMGI,MAAMC,KAAKD,MAAM,IAAIE,QAAQhC,KAAI,SAACiC,GAAD,OAChC,wBAEEP,MAAOO,EAFT,SAIGA,GAHIA,qBEvH7BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.61d47bfa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsLIst';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  ALPHABET = 'A-Z',\n  LENGTH = 'Length',\n  NONE = 'none',\n}\n\nexport const App: React.FC = () => {\n  const goods:string[] = [...goodsFromServer];\n  const [itsBegin, setBegin] = useState(true);\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState<SortBy>(SortBy.NONE);\n  const [selectedLength, setLength] = useState(1);\n\n  const visibleGoods = goods.filter(good => good.length >= selectedLength);\n\n  const reset = () => {\n    setLength(1);\n    setReversed(false);\n    setSortBy(SortBy.NONE);\n  };\n\n  const selectLenght = (value: number) => {\n    setLength(value);\n  };\n\n  switch (sortBy) {\n    case SortBy.ALPHABET:\n      visibleGoods.sort((curGood, nextGood) => curGood.localeCompare(nextGood));\n      break;\n\n    case SortBy.LENGTH:\n      visibleGoods\n        .sort((curGood, nextGood) => curGood.length - nextGood.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {itsBegin\n          ? (\n            <button\n              className=\"button is-success level-item\"\n              type=\"button\"\n              onClick={() => setBegin(false)}\n            >\n              Start\n            </button>\n          )\n          : (\n            <div className=\"message is-primary\">\n              <div className=\"message-header title is-3 level\">\n                <h1>Goods</h1>\n                <button\n                  className=\"button is-warning\"\n                  type=\"button\"\n                  onClick={() => reset()}\n                >\n                  Reset\n                </button>\n              </div>\n              <div className=\"\">\n                <div className=\"container\">\n                  <GoodsList goods={visibleGoods} />\n                </div>\n              </div>\n              <div className=\"buttons-container content level\">\n                <button\n                  className=\"button is-primary\"\n                  type=\"button\"\n                  onClick={() => setReversed(!isReversed)}\n                >\n                  Reverse\n                </button>\n                <button\n                  className=\"button is-primary\"\n                  type=\"button\"\n                  onClick={() => setSortBy(SortBy.ALPHABET)}\n                >\n                  Sort by A-Z\n                </button>\n                <button\n                  className=\"button is-primary\"\n                  type=\"button\"\n                  onClick={() => setSortBy(SortBy.LENGTH)}\n                >\n                  Sort by lenght\n                </button>\n                <div className=\"select is-success\">\n                  <select\n                    value={selectedLength}\n                    onChange={({ target }) => {\n                      selectLenght(Number(target.value));\n                    }}\n                  >\n                    {Array.from(Array(11).keys()).map((item) => (\n                      <option\n                        key={item}\n                        value={item}\n                      >\n                        {item}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n          )}\n\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './GoodsList.css';\n\nexport type Goods = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Goods> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          className=\"subtitle is-5\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}